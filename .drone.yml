kind: pipeline
type: docker
name: arm64-gcc

platform:
  arch: arm64

steps:
- name: test
  image: ubuntu
  commands:
  - apt update -y && apt install -y llvm build-essential cmake ninja-build gcc
  - mkdir build && cd build
  - env CXXFLAGS="-UNDEBUG" LDFLAGS="-fuse-ld=gold" cmake -GNinja -DCMAKE_BUILD_TYPE=Release ..
  - ninja -j24
  - ctest -j24

---
kind: pipeline
type: docker
name: arm64-clang

platform:
  arch: arm64

steps:
- name: test
  image: ubuntu
  commands:
  - apt update -y && apt install -y llvm-8 build-essential cmake ninja-build clang-8 libc++-8-dev libc++abi-8-dev lld-8
  - mkdir build && cd build
  - env CC=clang-8 CXX=clang++-8 CXXFLAGS="-stdlib=libc++ -UNDEBUG" LDFLAGS="-fuse-ld=lld" cmake -GNinja -DCMAKE_BUILD_TYPE=Release ..
  - ninja -j24
  - ctest -j24

---

kind: pipeline
type: docker
name: amd64

platform:
  arch: amd64

steps:
- name: test
  image: ubuntu
  commands:
  - apt update -y && apt install -y llvm build-essential cmake ninja-build
  - mkdir build && cd build
  - env LDFLAGS="-fuse-ld=gold" CXXFLAGS="-UNDEBUG" cmake -GNinja -DCMAKE_BUILD_TYPE=Release ..
  - ninja -j24
  - ctest -j24

# ---
# kind: pipeline
# name: after

# steps:
# - name: github
#   image: plugins/webhook
#   settings:
#     urls: https://api.github.com/repos/DavidTruby/f18/statuses/${DRONE_COMMIT_SHA}
#     content_type: application/json
#     environment:
#       GITHUB_TOKEN:
#         from_secret: github-token
#     headers:
#       - "Authorization: token  ${GITHUB_TOKEN}"
#     template: |
#       {
#       "state": "${DRONE_BUILD_STATUS}",
#       "target_url": "https://cloud.drone.io/DavidTruby/f18/${DRONE_BUILD_NUMBER}",
#       "context": "continuous-integration/drone"
#       }
#     debug: true

# depends_on:
# - arm64-gcc
# - arm64-clang
# - amd64
